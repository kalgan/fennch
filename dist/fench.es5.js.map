{"version":3,"file":"fench.es5.js","sources":["../src/abortablePromise.ts","../src/interceptor.ts","../src/fRequest.ts","../src/fResponse.ts","../src/fench.ts"],"sourcesContent":["interface IAbortablePromise {\n  abortController: AbortController;\n  promise: Promise<any>;\n}\n\ntype PromiseExecutor = (\n  resolve?: (value?: any) => void,\n  reject?: (value?: any) => void,\n  abortSignal?: AbortSignal\n) => any;\n\nclass AbortablePromise implements AbortController {\n  public static resolve(aborter = null, data) {\n    return new AbortablePromise(Promise.resolve(data), aborter);\n  }\n\n  public static reject(aborter = null, err) {\n    return new AbortablePromise(Promise.reject(err), aborter);\n  }\n\n  public static race(aborter = null, data) {\n    return new AbortablePromise(Promise.race(data), aborter);\n  }\n\n  public static all(aborter = null, data) {\n    return new AbortablePromise(Promise.all(data), aborter);\n  }\n\n  public signal: AbortSignal;\n  public abortController: AbortController;\n\n  private promise: Promise<any>;\n\n  constructor(\n    executor: Promise<any> | PromiseExecutor,\n    aborter: AbortController | null = null\n  ) {\n    this.abortController = aborter || new AbortController();\n    if (executor instanceof Promise) {\n      this.promise = executor;\n    } else {\n      this.promise = new Promise((resolve, reject) =>\n        executor(resolve, reject, this.abortController.signal)\n      );\n    }\n  }\n\n  public then(...args) {\n    return new AbortablePromise(\n      this.promise.then(...args),\n      this.abortController\n    );\n  }\n\n  public catch(...args) {\n    return new AbortablePromise(\n      this.promise.catch(...args),\n      this.abortController\n    );\n  }\n\n  public finally(...args) {\n    return this.promise.finally(...args);\n  }\n\n  public abort() {\n    return this.abortController.abort();\n  }\n}\n\nexport default AbortablePromise;\n","import AbortablePromise from \"./abortablePromise\";\n\ninterface IInterceptor {\n  request?: (request?: any) => any;\n  requestError?: (err?: any) => any;\n  response?: (response?: any, request?: any) => any;\n  responseError?: (err?: any) => any;\n}\n\ninterface IInterceptors {\n  interceptors: IInterceptor[];\n  API: object;\n}\n\nclass Interceptors implements IInterceptors {\n  public interceptors;\n  public API;\n\n  constructor(API: object, interceptableMethods: any[] = []) {\n    this.interceptors = [];\n\n    if (!API) {\n      throw new Error(\"API should be passed to the Interceptor\");\n    }\n    this.API = API;\n\n    if (interceptableMethods.length === 0) {\n      throw new Error(\"no methods were added to interceptableMethods\");\n    }\n\n    interceptableMethods.forEach(methodName => {\n      const methodFn = API[methodName];\n      API[methodName] = (...args) => this.interceptedMethod(methodFn, ...args);\n    });\n  }\n\n  public register(interceptor) {\n    this.interceptors.push(interceptor);\n    return () => this.unregister(interceptor);\n  }\n\n  public unregister(interceptor) {\n    const index = this.interceptors.indexOf(interceptor);\n    if (index >= 0) {\n      this.interceptors.splice(index, 1);\n    }\n  }\n\n  public clear() {\n    this.interceptors = [];\n  }\n\n  private interceptedMethod(methodFn, ...args) {\n    // const { interceptors, API } = this;\n    const reversedInterceptors = this.interceptors.slice().reverse();\n\n    const abortController = new AbortController();\n    let promise = AbortablePromise.resolve(abortController, args);\n\n    // Register request interceptors\n    this.interceptors.forEach(({ request, requestError }) => {\n      if (typeof request === \"function\") {\n        promise = promise.then(args =>\n          request(promise.abortController.signal, ...[].concat(args))\n        );\n      }\n      if (typeof requestError === \"function\") {\n        promise = promise.catch(requestError);\n      }\n    });\n\n    // Register methodFn call\n    if (typeof methodFn === \"function\") {\n      promise = promise.then(args =>\n        methodFn(promise.abortController.signal, ...[].concat(args))\n      );\n    }\n\n    // Register response interceptors\n    reversedInterceptors.forEach(({ response, responseError }) => {\n      if (typeof response === \"function\") {\n        promise = promise.then(response);\n      }\n      if (typeof responseError === \"function\") {\n        promise = promise.catch(responseError);\n      }\n    });\n\n    if (this.API.timeout > 0) {\n      const timer = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error(\"Timeout exceeded\"));\n        }, this.API.timeout);\n      });\n\n      return AbortablePromise.race(abortController, [promise, timer]).then(\n        value => {\n          if (value && value.type === \"timeout\") {\n            promise.abort();\n          }\n          return value;\n        },\n        err => Promise.reject(err)\n      );\n    }\n    return promise;\n  }\n}\n\nexport default Interceptors;\n","// import urlJoin from \"url-join\";\n// import qs from \"qs\";\n\nconst urlJoin = require(\"url-join\");\nconst qs = require(\"qs\");\n\nexport interface IFenchRequest {\n  body?: object;\n  endpoint: string;\n  headers: object;\n  method?: string;\n  mode: string;\n  raw?: Request;\n  params?: object;\n  signal: AbortSignal;\n  url: string;\n}\n\ninterface IOptions {\n  params?: object;\n  body?: object;\n  headers?: object;\n  method?: string;\n  mode?: string;\n}\n\nexport default function createRequest(args: {\n  baseURI: string;\n  globalHeaders: object;\n  path: string;\n  options: IOptions;\n  arrayFormat: string;\n  abortSignal: AbortSignal;\n}): IFenchRequest {\n  const {\n    baseURI,\n    globalHeaders,\n    path,\n    options,\n    arrayFormat,\n    abortSignal\n  } = args;\n\n  const opts: any = {};\n  // Creating URI\n  const endpoint = urlJoin(baseURI, path);\n  const fullUri = urlJoin(\n    endpoint,\n    `${\n      options.params ? \"?\" + qs.stringify(options.params, { arrayFormat }) : \"\"\n    }`\n  );\n\n  // Creating headers\n  // remove any null or blank headers\n  // (e.g. to automatically set Content-Type with `FormData` boundary)\n  // const headers = new Headers();\n  const headersObj = {};\n  Object.entries(options.headers).forEach(([key, value]) => {\n    if ((typeof value !== \"undefined\" && value !== null) || value !== \"\") {\n      headersObj[key] = value;\n    }\n  });\n  opts.headers = new Headers(headersObj);\n\n  opts.method = options.method = \"del\"\n    ? \"DELETE\"\n    : options.method.toUpperCase();\n\n  // Creating body if nedeed\n  if (\n    options.method.toLowerCase() !== \"get\" &&\n    options.method.toLowerCase() !== \"head\"\n  ) {\n    opts.body = options.body;\n  }\n\n  if (options.mode) {\n    opts.mode = options.mode;\n  }\n\n  opts.signal = abortSignal;\n\n  return {\n    ...opts,\n    endpoint,\n    params: options.params,\n    raw: new Request(fullUri, opts),\n    url: fullUri\n  };\n}\n","import { IFenchRequest } from \"./fRequest\";\n\ntype ModernHeaders = Headers & {\n  [Symbol.iterator](): Iterator<string[]>;\n};\n\nexport interface IFenchResponse {\n  body?: object | string | Blob;\n  endpoint: string;\n  err?: Error;\n  headers: object;\n  ok: boolean;\n  raw: Response;\n  request: IFenchRequest;\n  status: number;\n  statusText: string;\n  type: string;\n  url: string;\n}\n\nasync function parseResponse(res: Response, contentType: string) {\n  let body: any = null;\n  let err: any = null;\n  if (res.ok) {\n    if (contentType && contentType.includes(\"application/json\")) {\n      try {\n        if (typeof res.json === \"function\") {\n          body = await res.json();\n        } else {\n          body = await res.text();\n          body = JSON.parse(body);\n        }\n      } catch (err) {\n        return err;\n      }\n    } else {\n      body = await res.text();\n    }\n  } else {\n    err = new Error(res.statusText);\n\n    // check if the response was JSON, and if so, better the error\n    if (contentType && contentType.includes(\"application/json\")) {\n      try {\n        // // attempt to parse json body to use as error message\n        if (typeof res.json === \"function\") {\n          body = await res.json();\n        } else {\n          body = await res.text();\n          body = JSON.parse(body);\n        }\n\n        // attempt to use better and human-friendly error messages\n        if (typeof body === \"object\" && typeof body.message === \"string\") {\n          err = new Error(body.message);\n        } else if (\n          !Array.isArray(body) &&\n          // attempt to utilize Stripe-inspired error messages\n          typeof body.error === \"object\"\n        ) {\n          if (body.error.message) {\n            err = new Error(body.error.message);\n          }\n          if (body.error.stack) {\n            err.stack = body.error.stack;\n          }\n          if (body.error.code) {\n            err.code = body.error.code;\n          }\n          if (body.error.param) {\n            err.param = body.error.param;\n          }\n        }\n      } catch (e) {\n        err = e;\n      }\n    }\n  }\n  return { body, err };\n}\n\nexport default async function createResponse(\n  rawResponse: Response,\n  fRequest: IFenchRequest\n): Promise<IFenchResponse> {\n  const fResponse: IFenchResponse = {\n    body: null,\n    endpoint: fRequest.endpoint,\n    headers: {},\n    ok: rawResponse.ok,\n    raw: rawResponse,\n    request: fRequest,\n    status: rawResponse.status,\n    statusText: rawResponse.statusText,\n    type: rawResponse.type,\n    url: rawResponse.url\n  };\n\n  for (const [key, value] of rawResponse.headers as any) {\n    fResponse.headers[key] = value;\n  }\n\n  const { body, err } = await parseResponse(\n    rawResponse,\n    rawResponse.headers.get(\"Content-Type\")\n  );\n\n  if (err) {\n    fResponse.err = err;\n  }\n  fResponse.body = body;\n  return fResponse;\n}\n","import Interceptor from \"./interceptor\";\nimport createRequest, { IFenchRequest } from \"./fRequest\";\nimport createResponse, { IFenchResponse } from \"./fResponse\";\n\nconst methods = [\n  \"get\",\n  \"head\",\n  \"post\",\n  \"put\",\n  \"del\",\n  \"delete\",\n  \"options\",\n  \"patch\"\n];\n\ntype FenchOptions = RequestInit & {\n  parseErr?: Error;\n  headers?: object;\n  baseURI?: string;\n  raw?: boolean;\n  arrayFormat?: string;\n  auth?: object;\n  timeout?: number;\n  body?: object;\n  signal?: object;\n};\n\nclass Fench {\n  public interceptor: object;\n  public timeout: number;\n  public parseErr?: Error;\n\n  private opts: FenchOptions;\n  private headers: object;\n  private raw: boolean;\n  private arrayFormat: string;\n\n  constructor(opts: FenchOptions = {}) {\n    this.opts = opts;\n\n    Object.defineProperty(this, \"parseErr\", {\n      enumerable: false,\n      value:\n        opts.parseErr ||\n        new Error(\n          `Invalid JSON received${opts.baseURI ? ` from ${opts.baseURI}` : \"\"}`\n        )\n    });\n\n    this.headers = {\n      ...opts.headers\n    };\n\n    this.opts.arrayFormat = opts.arrayFormat || \"indices\";\n\n    // this.raw = opts.raw === true;\n\n    // if (opts.auth) {\n    //   this.auth(opts.auth);\n    // }\n\n    methods.forEach(method => {\n      this[method] = this.setup(method);\n    });\n\n    // interceptor should be initialized after methods setup\n    this.interceptor = new Interceptor(this, methods);\n    this.timeout = opts.timeout || 0;\n  }\n\n  // public auth(creds) {\n  //   if (typeof creds === \"string\") {\n  //     const index = creds.indexOf(\":\");\n  //     if (index !== -1)\n  //       creds = [creds.substr(0, index), creds.substr(index + 1)];\n  //   }\n\n  //   if (!Array.isArray(creds)) {\n  //     // eslint-disable-next-line prefer-rest-params\n  //     creds = [].slice.call(arguments);\n  //   }\n\n  //   switch (creds.length) {\n  //     case 0:\n  //       creds = [\"\", \"\"];\n  //       break;\n  //     case 1:\n  //       creds.push(\"\");\n  //       break;\n  //     case 2:\n  //       break;\n  //     default:\n  //       throw new Error(\"auth option can only have two keys `[user, pass]`\");\n  //   }\n\n  //   if (typeof creds[0] !== \"string\") {\n  //     throw new TypeError(\"auth option `user` must be a string\");\n  //   }\n\n  //   if (typeof creds[1] !== \"string\") {\n  //     throw new TypeError(\"auth option `pass` must be a string\");\n  //   }\n\n  //   if (!creds[0] && !creds[1]) {\n  //     delete this.headers.Authorization;\n  //   } else {\n  //     this.headers.Authorization = `Basic ${Buffer.from(\n  //       creds.join(\":\")\n  //     ).toString(\"base64\")}`;\n  //   }\n\n  //   return this;\n  // }\n\n  // public jwt(token) {\n  //   if (token === null) {\n  //     delete this.headers.Authorization;\n  //   } else if (typeof token === \"string\") {\n  //     this.headers.Authorization = `Bearer ${token}`;\n  //   } else {\n  //     throw new TypeError(\"jwt token must be a string\");\n  //   }\n\n  //   return this;\n  // }\n\n  private setup(method) {\n    return (abortSignal, path = \"/\", options: FenchOptions) => {\n      // path must be string\n      if (typeof path !== \"string\") {\n        throw new TypeError(\"`path` must be a string\");\n      }\n\n      // otherwise check if its an object\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new TypeError(\"`options` must be an object\");\n      }\n\n      return new Promise(async (resolve, reject) => {\n        try {\n          const fRequest = createRequest({\n            baseURI: this.opts.baseURI,\n            globalHeaders: this.opts.headers,\n            path,\n            options,\n            arrayFormat: this.opts.arrayFormat,\n            abortSignal\n          });\n\n          const rawResponse = await fetch(fRequest.raw);\n          const fResponse = await createResponse(rawResponse, fRequest);\n\n          resolve(fResponse);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    };\n  }\n}\n\nexport default Fench;\n"],"names":["tslib_1.__values","tslib_1.__read","Interceptor"],"mappings":"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"}