{"version":3,"file":"fench.umd.js","sources":["../src/abortablePromise.ts","../src/interceptor.ts","../src/fRequest.ts","../src/fResponse.ts","../src/fench.ts"],"sourcesContent":["interface IAbortablePromise {\n  abortController: AbortController;\n  promise: Promise<any>;\n}\n\ntype PromiseExecutor = (\n  resolve?: (value?: any) => void,\n  reject?: (value?: any) => void,\n  abortSignal?: AbortSignal\n) => any;\n\nclass AbortablePromise implements AbortController {\n  public static resolve(aborter = null, data) {\n    return new AbortablePromise(Promise.resolve(data), aborter);\n  }\n\n  public static reject(aborter = null, err) {\n    return new AbortablePromise(Promise.reject(err), aborter);\n  }\n\n  public static race(aborter = null, data) {\n    return new AbortablePromise(Promise.race(data), aborter);\n  }\n\n  public static all(aborter = null, data) {\n    return new AbortablePromise(Promise.all(data), aborter);\n  }\n\n  public signal: AbortSignal;\n  public abortController: AbortController;\n\n  private promise: Promise<any>;\n\n  constructor(\n    executor: Promise<any> | PromiseExecutor,\n    aborter: AbortController | null = null\n  ) {\n    this.abortController = aborter || new AbortController();\n    if (executor instanceof Promise) {\n      this.promise = executor;\n    } else {\n      this.promise = new Promise((resolve, reject) =>\n        executor(resolve, reject, this.abortController.signal)\n      );\n    }\n  }\n\n  public then(...args) {\n    return new AbortablePromise(\n      this.promise.then(...args),\n      this.abortController\n    );\n  }\n\n  public catch(...args) {\n    return new AbortablePromise(\n      this.promise.catch(...args),\n      this.abortController\n    );\n  }\n\n  public finally(...args) {\n    return this.promise.finally(...args);\n  }\n\n  public abort() {\n    return this.abortController.abort();\n  }\n}\n\nexport default AbortablePromise;\n","import AbortablePromise from \"./abortablePromise\";\nimport createResponse from \"./fResponse\";\n\ninterface IInterceptor {\n  request?: (request?: any) => any;\n  requestError?: (err?: any) => any;\n  response?: (response?: any, request?: any) => any;\n  responseError?: (err?: any) => any;\n}\n\ninterface IInterceptors {\n  interceptors: IInterceptor[];\n  API: object;\n}\n\nclass Interceptors implements IInterceptors {\n  public interceptors;\n  public API;\n\n  constructor(API: object, interceptableMethods: any[] = []) {\n    this.interceptors = [];\n\n    if (!API) {\n      throw new Error(\"API should be passed to the Interceptor\");\n    }\n    this.API = API;\n\n    if (interceptableMethods.length === 0) {\n      throw new Error(\"no methods were added to interceptableMethods\");\n    }\n\n    interceptableMethods.forEach(methodName => {\n      const methodFn = API[methodName];\n      API[methodName] = (...args) => this.interceptedMethod(methodFn, ...args);\n    });\n  }\n\n  public register(interceptor) {\n    this.interceptors.push(interceptor);\n    return () => this.unregister(interceptor);\n  }\n\n  public unregister(interceptor) {\n    const index = this.interceptors.indexOf(interceptor);\n    if (index >= 0) {\n      this.interceptors.splice(index, 1);\n    }\n  }\n\n  public clear() {\n    this.interceptors = [];\n  }\n\n  private interceptedMethod(methodFn, ...args) {\n    // const { interceptors, API } = this;\n    const reversedInterceptors = this.interceptors.slice().reverse();\n\n    const abortController = new AbortController();\n    let promise = AbortablePromise.resolve(abortController, args);\n\n    // Register request interceptors\n    this.interceptors.forEach(({ request, requestError }) => {\n      if (typeof request === \"function\") {\n        promise = promise.then(args =>\n          request(promise.abortController.signal, ...[].concat(args))\n        );\n      }\n      if (typeof requestError === \"function\") {\n        promise = promise.catch(requestError);\n      }\n    });\n\n    // Register methodFn call\n    if (typeof methodFn === \"function\") {\n      promise = promise.then(args =>\n        methodFn(promise.abortController.signal, ...[].concat(args))\n      );\n    }\n\n    // Register response interceptors\n    reversedInterceptors.forEach(({ response, responseError }) => {\n      if (typeof response === \"function\") {\n        promise = promise.then(response);\n      }\n      if (typeof responseError === \"function\") {\n        promise = promise.catch(responseError);\n      }\n    });\n\n    let timeout = 0;\n\n    if (\n      typeof args[args.length - 1] === \"object\" &&\n      typeof args[args.length - 1].timeout === \"number\"\n    ) {\n      timeout = args[args.length - 1].timeout;\n    } else {\n      timeout = this.API.timeout;\n    }\n\n    if (timeout > 0) {\n      const timer = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error(\"Timeout exceeded\"));\n        }, timeout);\n      });\n\n      return AbortablePromise.race(abortController, [promise, timer]).then(\n        value => value,\n        err => {\n          if (err && err.message === \"Timeout exceeded\") {\n            promise.abort();\n          }\n          return Promise.reject(err);\n        }\n      );\n    }\n    return promise;\n  }\n}\n\nexport default Interceptors;\n","// import urlJoin from \"url-join\";\n// import qs from \"qs\";\n\nconst urlJoin = require(\"url-join\");\nconst qs = require(\"qs\");\n\nexport interface IFenchRequest {\n  body?: object;\n  path: string;\n  headers: object;\n  method?: string;\n  mode: string;\n  raw?: Request;\n  params?: object;\n  signal: AbortSignal;\n  url: string;\n}\n\ninterface IOptions {\n  params?: object;\n  body?: object;\n  headers?: object;\n  method?: string;\n  mode?: string;\n}\n\nexport default function createRequest(args: {\n  baseURI: string;\n  globalHeaders: object;\n  path: string;\n  options: IOptions;\n  arrayFormat: string;\n  abortSignal: AbortSignal;\n}): IFenchRequest {\n  const {\n    baseURI,\n    globalHeaders,\n    path,\n    options,\n    arrayFormat,\n    abortSignal\n  } = args;\n\n  const opts: any = {};\n  // Creating URI\n  const fullUri = urlJoin(\n    baseURI,\n    path,\n    `${\n      options.params ? \"?\" + qs.stringify(options.params, { arrayFormat }) : \"\"\n    }`\n  );\n\n  // Creating headers\n  // remove any null or blank headers\n  // (e.g. to automatically set Content-Type with `FormData` boundary)\n  // const headers = new Headers();\n  const headersObj = {};\n  Object.entries(options.headers).forEach(([key, value]) => {\n    if ((typeof value !== \"undefined\" && value !== null) || value !== \"\") {\n      headersObj[key] = value;\n    }\n  });\n  opts.headers = new Headers(headersObj);\n\n  if (options.method) {\n    opts.method =\n      options.method === \"del\" ? \"DELETE\" : options.method.toUpperCase();\n  } else {\n    options.method = \"GET\";\n  }\n\n  // Creating body if nedeed\n  if (\n    options.method.toLowerCase() !== \"get\" &&\n    options.method.toLowerCase() !== \"head\"\n  ) {\n    opts.body = options.body;\n  }\n\n  if (options.mode) {\n    opts.mode = options.mode;\n  }\n\n  opts.signal = abortSignal;\n\n  return {\n    ...opts,\n    path,\n    params: options.params,\n    raw: new Request(fullUri, opts),\n    url: fullUri\n  };\n}\n","import { IFenchRequest } from \"./fRequest\";\n\ntype ModernHeaders = Headers & {\n  [Symbol.iterator](): Iterator<string[]>;\n};\n\nexport interface IFenchResponse {\n  body?: object | string | Blob;\n  path: string;\n  err?: Error;\n  headers: object;\n  ok: boolean;\n  raw: Response;\n  request: IFenchRequest;\n  status: number;\n  statusText: string;\n  type: string;\n  url: string;\n}\n\nasync function parseResponse(res: Response, contentType: string) {\n  let body: any = null;\n  let err: any = null;\n  if (res.ok) {\n    if (contentType && contentType.includes(\"application/json\")) {\n      try {\n        if (typeof res.json === \"function\") {\n          body = await res.json();\n        } else {\n          body = await res.text();\n          body = JSON.parse(body);\n        }\n      } catch (err) {\n        return err;\n      }\n    } else {\n      body = await res.text();\n    }\n  } else {\n    err = new Error(res.statusText);\n\n    // check if the response was JSON, and if so, better the error\n    if (contentType && contentType.includes(\"application/json\")) {\n      try {\n        // // attempt to parse json body to use as error message\n        if (typeof res.json === \"function\") {\n          body = await res.json();\n        } else {\n          body = await res.text();\n          body = JSON.parse(body);\n        }\n\n        // attempt to use better and human-friendly error messages\n        if (typeof body === \"object\" && typeof body.message === \"string\") {\n          err = new Error(body.message);\n        } else if (\n          !Array.isArray(body) &&\n          // attempt to utilize Stripe-inspired error messages\n          typeof body.error === \"object\"\n        ) {\n          if (body.error.message) {\n            err = new Error(body.error.message);\n          }\n          if (body.error.stack) {\n            err.stack = body.error.stack;\n          }\n          if (body.error.code) {\n            err.code = body.error.code;\n          }\n          if (body.error.param) {\n            err.param = body.error.param;\n          }\n        }\n      } catch (e) {\n        err = e;\n      }\n    }\n  }\n  return { body, err };\n}\n\nexport default async function createResponse(\n  rawResponse: Response,\n  fRequest: IFenchRequest\n): Promise<IFenchResponse> {\n  const fResponse: IFenchResponse = {\n    body: null,\n    path: fRequest.path,\n    headers: {},\n    ok: rawResponse.ok,\n    raw: rawResponse,\n    request: fRequest,\n    status: rawResponse.status,\n    statusText: rawResponse.statusText,\n    type: rawResponse.type,\n    url: rawResponse.url\n  };\n\n  for (const [key, value] of rawResponse.headers as any) {\n    fResponse.headers[key] = value;\n  }\n\n  const { body, err } = await parseResponse(\n    rawResponse,\n    rawResponse.headers.get(\"Content-Type\")\n  );\n\n  if (err) {\n    fResponse.err = err;\n  }\n  fResponse.body = body;\n  return fResponse;\n}\n","import Interceptor from \"./interceptor\";\nimport createRequest, { IFenchRequest } from \"./fRequest\";\nimport createResponse, { IFenchResponse } from \"./fResponse\";\n\nconst methods = [\n  \"get\",\n  \"head\",\n  \"post\",\n  \"put\",\n  \"del\",\n  \"delete\",\n  \"options\",\n  \"patch\"\n];\n\ntype FenchOptions = RequestInit & {\n  parseErr?: Error;\n  headers?: object;\n  baseURI?: string;\n  raw?: boolean;\n  arrayFormat?: string;\n  auth?: object;\n  timeout?: number;\n  body?: object;\n  signal?: object;\n};\n\nclass Fench {\n  public interceptor: object;\n  public timeout: number;\n  public parseErr?: Error;\n  public req: any;\n\n  private opts: FenchOptions;\n  private headers: object;\n  private raw: boolean;\n  private arrayFormat: string;\n\n  constructor(opts: FenchOptions = {}) {\n    this.opts = opts;\n\n    Object.defineProperty(this, \"parseErr\", {\n      enumerable: false,\n      value:\n        opts.parseErr ||\n        new Error(\n          `Invalid JSON received${opts.baseURI ? ` from ${opts.baseURI}` : \"\"}`\n        )\n    });\n\n    this.opts.arrayFormat = opts.arrayFormat || \"indices\";\n\n    methods.forEach(method => {\n      this[method] = this.setup(method);\n    });\n    this.req = (abortSignal: AbortSignal, request: IFenchRequest) => {\n      return this.makeRequest(abortSignal, request);\n    };\n\n    // interceptor should be initialized after methods setup\n    this.interceptor = new Interceptor(this, [...methods, \"req\"]);\n    this.timeout = opts.timeout || 0;\n  }\n\n  // public auth(creds) {\n  //   if (typeof creds === \"string\") {\n  //     const index = creds.indexOf(\":\");\n  //     if (index !== -1)\n  //       creds = [creds.substr(0, index), creds.substr(index + 1)];\n  //   }\n\n  //   if (!Array.isArray(creds)) {\n  //     // eslint-disable-next-line prefer-rest-params\n  //     creds = [].slice.call(arguments);\n  //   }\n\n  //   switch (creds.length) {\n  //     case 0:\n  //       creds = [\"\", \"\"];\n  //       break;\n  //     case 1:\n  //       creds.push(\"\");\n  //       break;\n  //     case 2:\n  //       break;\n  //     default:\n  //       throw new Error(\"auth option can only have two keys `[user, pass]`\");\n  //   }\n\n  //   if (typeof creds[0] !== \"string\") {\n  //     throw new TypeError(\"auth option `user` must be a string\");\n  //   }\n\n  //   if (typeof creds[1] !== \"string\") {\n  //     throw new TypeError(\"auth option `pass` must be a string\");\n  //   }\n\n  //   if (!creds[0] && !creds[1]) {\n  //     delete this.headers.Authorization;\n  //   } else {\n  //     this.headers.Authorization = `Basic ${Buffer.from(\n  //       creds.join(\":\")\n  //     ).toString(\"base64\")}`;\n  //   }\n\n  //   return this;\n  // }\n\n  // public jwt(token) {\n  //   if (token === null) {\n  //     delete this.headers.Authorization;\n  //   } else if (typeof token === \"string\") {\n  //     this.headers.Authorization = `Bearer ${token}`;\n  //   } else {\n  //     throw new TypeError(\"jwt token must be a string\");\n  //   }\n\n  //   return this;\n  // }\n  private makeRequest(abortSignal: AbortSignal, fRequest: IFenchRequest) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const rawResponse = await fetch(fRequest.raw);\n        const fResponse = await createResponse(rawResponse, fRequest);\n\n        resolve(fResponse);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  private prepareRequest(\n    abortSignal,\n    pathOrRequest = \"/\",\n    options: FenchOptions\n  ) {\n    if (options && (typeof options !== \"object\" || Array.isArray(options))) {\n      throw new TypeError(\"`options` must be an object\");\n    }\n    options = {\n      ...this.opts,\n      ...options\n    };\n\n    let fRequest: any = null;\n\n    const req = <IFenchRequest>(<unknown>pathOrRequest);\n    // const req = pathOrRequest;\n    if (req.headers) {\n      fRequest = req;\n    } else {\n      if (typeof pathOrRequest !== \"string\") {\n        throw new TypeError(\"`path` must be a string\");\n      }\n\n      fRequest = createRequest({\n        baseURI: this.opts.baseURI,\n        globalHeaders: this.opts.headers,\n        path: pathOrRequest,\n        options,\n        arrayFormat: this.opts.arrayFormat,\n        abortSignal\n      });\n    }\n\n    return fRequest;\n  }\n\n  private setup(method) {\n    return (abortSignal, pathOrRequest = \"/\", options: FenchOptions) => {\n      const request = this.prepareRequest(abortSignal, pathOrRequest, options);\n      return this.makeRequest(abortSignal, request);\n    };\n  }\n}\n\nexport default Fench;\n"],"names":["tslib_1.__values","tslib_1.__read","Interceptor"],"mappings":"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"}